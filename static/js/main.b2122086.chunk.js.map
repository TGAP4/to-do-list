{"version":3,"sources":["fonts/SourceSansPro-Regular.ttf","App.styles.jsx","redux/modals/modals-selectors.js","components/header/header.styles.jsx","redux/jobs/jobs-selectors.js","components/add-button/add-button.styles.jsx","redux/modals/modals-types.js","redux/modals/modals-actions.js","components/add-button/add-button.jsx","components/header/header.jsx","components/jobs/jobs.styles.jsx","components/job-card/job-card.styles.jsx","components/delete-modal/delete-modal.styles.jsx","redux/jobs/jobs-types.js","components/delete-modal/delete-modal.jsx","redux/jobs/jobs-actions.js","components/job-card/job-card.jsx","utils.js","components/jobs/jobs.jsx","components/add-modal/add-modal.styles.jsx","components/add-modal/add-modal.jsx","App.js","serviceWorker.js","redux/jobs/jobs-utils.js","redux/jobs/jobs-reducer.js","redux/modals/modals-reducer.js","redux/root-reducer.js","redux/store.js","index.js"],"names":["module","exports","App","styled","div","selectModals","state","modals","selectAddModalHidden","createSelector","addModalHidden","selectVisibleDeleteModal","visibleDeleteModal","Header","Title","selectJobsList","jobs","jobsList","selectNumJobs","length","AddButton","Types","TOGGLE_ADD_MODAL","TOGGLE_DELETE_MODAL","toggleAddModal","type","toggleDeleteModal","id","payload","connect","dispatch","onClick","mapState","createStructuredSelector","numJobs","Jobs","TrashButton","img","JobCard","color","shuffle","modifier","Priority","priority","JobInfo","TaskName","TimeAdded","Backdrop","Popup","Text","Buttons","ButtonStyles","css","Button1","Button2","ADD_JOB","DELETE_JOB","deleteJob","job","currentJob","jobInfo","taskName","additionalInfo","date","timeDiff","taskTime","diffMinutes","Math","round","Date","getTime","getTimeDiff","src","alt","map","i","key","XButton","Input","input","SubmitButton","addJob","useState","taskInfo","setTaskInfo","randomColor","floor","random","handleChange","event","target","name","value","placeholder","onChange","ceil","Number","isInteger","Boolean","window","location","hostname","match","jobToAdd","newJobsList","find","toLowerCase","push","sort","a","b","jobToDelete","filter","INITIAL_STATE","jobsReducer","action","modalsReducer","persistConfig","storage","whitelist","rootReducer","combineReducers","persistedReducer","persistReducer","store","createStore","applyMiddleware","persistor","persistStore","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.b2122086.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/SourceSansPro-Regular.c1678b46.ttf\";","import styled from 'styled-components';\n\nexport const App = styled.div`\n  width: 400px;\n`;","import {createSelector} from 'reselect';\n\nconst selectModals = state => state.modals;\n\nexport const selectAddModalHidden = createSelector(\n  [selectModals],\n  modals => modals.addModalHidden\n);\n\nexport const selectVisibleDeleteModal = createSelector(\n  [selectModals],\n  modals => modals.visibleDeleteModal\n);","import styled from 'styled-components';\n\nexport const Header = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  height 135px;\n  position: relative;\n  color: #70667d;\n  letter-spacing: 0.05rem;\n`;\n\nexport const Title = styled.div`\n  font-size: 20px;\n  color: #240052;\n  font-weight: 600;\n  margin: 45px 0 10px;\n`;","import {createSelector} from 'reselect';\n\nconst selectJobs = state => state.jobs;\n\nexport const selectJobsList = createSelector(\n  [selectJobs],\n  jobs => jobs.jobsList\n);\n\nexport const selectNumJobs = createSelector(\n  [selectJobsList],\n  jobsList => jobsList.length\n);","import styled from 'styled-components';\n\nexport const AddButton = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 95%;\n  height: 40px;\n  background-color: white;\n  border-radius: 5px;\n  box-shadow: 0 0 5px #bbbbbb;\n  margin: 0 auto;\n  font-size: 25px;\n  font-weight: 700;\n  color: #70667d\n`;","const Types = {\n  TOGGLE_ADD_MODAL: 'TOGGLE_ADD_MODAL',\n  TOGGLE_DELETE_MODAL: 'TOGGLE_DELETE_MODAL'\n};\n\nexport default Types;","import Types from './modals-types';\n\nexport const toggleAddModal = () => ({\n  type: Types.TOGGLE_ADD_MODAL\n});\n\nexport const toggleDeleteModal = id => ({\n  type: Types.TOGGLE_DELETE_MODAL,\n  payload: id\n});","import React from 'react';\nimport * as S from './add-button.styles';\n\nimport {connect} from 'react-redux';\nimport {toggleAddModal} from '../../redux/modals/modals-actions';\n\n\nconst AddButton = ({toggleAddModal}) => {\n  return (\n    <S.AddButton onClick={toggleAddModal}>+</S.AddButton>\n  );\n}\n\nconst mapDispatch = dispatch => ({\n  toggleAddModal: () => dispatch(toggleAddModal())\n});\n\nexport default connect(null, mapDispatch)(AddButton);","import React from 'react';\nimport * as S from './header.styles';\n\nimport {connect} from 'react-redux';\nimport {createStructuredSelector} from 'reselect';\nimport {selectNumJobs} from '../../redux/jobs/jobs-selectors';\n\nimport AddButton from '../add-button/add-button';\n\n\nconst Header = ({numJobs}) => {\n  return (\n    <>\n      <S.Header>\n        <S.Title>TO-DO LIST</S.Title>\n        <span>{numJobs} TASK{numJobs > 1 ? 'S': ''}</span>\n      </S.Header>\n      <AddButton />\n    </>\n  );\n}\n\nconst mapState = createStructuredSelector({\n  numJobs: selectNumJobs\n});\n\nexport default connect(mapState)(Header);","import styled from 'styled-components';\n\nexport const Jobs = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  text-align: center;\n  grid-gap: 12px;\n  margin-top: 10px;\n`;","import styled from 'styled-components';\n\nconst getColor = ({color: {shuffle, modifier}}) => {\n  switch (shuffle) {\n    case 1:\n      return `rgba(${255 - modifier}, 50, 50)`;\n    case 2:\n      return `rgba(${225 - modifier}, ${225 - modifier}, 50)`;\n    case 3:\n      return `rgba(${255 - modifier}, 50, ${255 - modifier})`;\n    case 4:\n      return `rgba(50, ${225 - modifier}, 50)`;\n    case 5:\n      return `rgba(50, ${225 - modifier}, ${150 - modifier})`;\n    case 6:\n      return `rgba(50, 50, ${255 - modifier})`;\n    case 7:\n      return `rgba(50, ${150 - modifier}, ${255 - modifier})`;\n    default:\n      return '#ffffff';\n  }\n}\n\nconst getPriorityColor = ({priority}) => {\n  switch (priority) {\n    case '1':\n      return '#777777';\n    case '2':\n      return 'green';\n    case '3':\n      return '#1515D3';\n    case '4':\n      return '#8A018A';\n    case '5':\n      return '#B60101';\n    default:\n      return 'black';\n  }\n};\n\nexport const TrashButton = styled.img`\n  width: 25px;\n  height: 25px;\n  padding: 3px;\n  border-radius: 20px;\n  visibility: hidden;\n  position: absolute;\n  top: 13px;\n  right: 15px;\n\n  &:hover {\n    background-color: #dddddd;\n  }\n`;\n\nexport const JobCard = styled.div`\n  display: flex;\n  width: 92%;\n  height: 120px;\n  border-radius: 5px;\n  box-shadow: 0 0 5px #bbbbbb;\n  margin: 6px 0;\n  background-color: ${getColor};\n  position: relative;\n  color: #ffffff;\n\n  &:hover {\n    ${TrashButton} {\n      visibility: visible;\n    }\n  }\n`;\n\nexport const Priority = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 40px;\n  height: 40px;\n  padding-bottom: 3px;\n  border-radius: 40px;\n  background-color: white;\n  position: absolute;\n  top: 15px;\n  left: 20px;\n  font-size: 30px;\n  font-weight: 900;\n  color: ${getPriorityColor};\n`;\n\nexport const JobInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: start;\n  position: absolute;\n  top: 15px;\n  left: 80px;\n`;\n\nexport const TaskName = styled.div`\n  font-size: 1.1em;\n  font-weight: 600;\n  margin-bottom: 5px;\n`;\n\nexport const TimeAdded = styled.div`\n  position: absolute;\n  bottom: 5px;\n  right: 7px;\n  font-size: 0.8em;\n`;\n","import styled, {css} from 'styled-components';\n\nexport const Backdrop = styled.div`\n  width: 100vw;\n  height: 100vh;\n  background-color: #0A011C;\n  opacity: 0.7;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 10;\n`;\n\nexport const Popup = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  height: 300px;\n  width: 350px;\n  padding: 0 40px;\n  text-align: center;\n  background-color: white;\n  border-radius: 5px;\n  position: fixed;\n  top: 80px;\n  left: 25px;\n  z-index: 11;\n`;\n\nexport const Title = styled.div`\n  font-size: 30px;\n  font-weight: 600;\n  margin: 60px 0 25px;\n`;\n\nexport const Text = styled.div`\n  font-size: 20px;\n`;\n\nexport const Buttons = styled.div`\n  display: flex;\n  justify-content: space-between;\n  width: 80%;\n  margin-top: 15px;\n`;\n\nconst ButtonStyles = css`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 47%;\n  height: 40px;\n  border-radius: 5px;\n  font-size: 17px;\n  margin-top: 20px;\n  cursor: pointer;\n  color: white;\n`;\n\nexport const Button1 = styled.div`\n  ${ButtonStyles}\n  background-color: #641792;\n`;\n\nexport const Button2 = styled.div`\n  ${ButtonStyles}\n  background-color: #BBACC4; \n`;\n\n","const Types = {\n  ADD_JOB: 'ADD_JOB',\n  DELETE_JOB: 'DELETE_JOB',\n};\n\nexport default Types;","import React from 'react';\nimport * as S from './delete-modal.styles';\n\nimport {connect} from 'react-redux';\nimport {toggleDeleteModal} from '../../redux/modals/modals-actions';\nimport {deleteJob} from '../../redux/jobs/jobs-actions';\n\n\nconst DeleteModal = ({currentJob, jobInfo, toggleDeleteModal, deleteJob}) => {\n  const handleSubmit = () => {\n    deleteJob(currentJob);\n    toggleDeleteModal();\n  };\n\n  return (\n    <>\n      <S.Backdrop onClick={toggleDeleteModal} />\n      <S.Popup>\n        <S.Title>Delete Job</S.Title>\n        <S.Text>Are you sure you want to delete this job?</S.Text>\n        <S.Buttons>\n          <S.Button1 onClick={handleSubmit}>Delete</S.Button1>\n          <S.Button2 onClick={toggleDeleteModal}>Cancel</S.Button2>\n        </S.Buttons>\n      </S.Popup>\n    </>\n  );\n}\n\nconst mapDispatch = dispatch => ({\n  toggleDeleteModal: () => dispatch(toggleDeleteModal()),\n  deleteJob: job => dispatch(deleteJob(job))\n});\n\nexport default connect(null, mapDispatch)(DeleteModal);","import Types from './jobs-types';\n\nexport const addJob = job => ({\n  type: Types.ADD_JOB,\n  payload: job\n});\n\nexport const deleteJob = job => ({\n  type: Types.DELETE_JOB,\n  payload: job\n});","import React from 'react';\nimport * as S from './job-card.styles';\n\nimport {connect} from 'react-redux';\nimport {createStructuredSelector} from 'reselect';\nimport {selectVisibleDeleteModal} from '../../redux/modals/modals-selectors';\nimport {toggleDeleteModal} from '../../redux/modals/modals-actions';\n\nimport {getTimeDiff} from '../../utils';\n\nimport DeleteModal from '../delete-modal/delete-modal';\n\n\nconst JobCard = ({taskName, additionalInfo, date, color, id, priority, toggleDeleteModal, visibleDeleteModal}) => {\n  const timeDiff = getTimeDiff(date);\n  const currentJob = {\n    taskName: taskName,\n    additionalInfo: additionalInfo\n  };\n  \n  return (\n    <>\n      {visibleDeleteModal === id ? <DeleteModal currentJob={currentJob} /> : null}\n      <S.JobCard color={color}>\n        <S.Priority priority={priority}>{priority}</S.Priority>\n        <S.TrashButton \n          src='https://cdn1.iconfinder.com/data/icons/shooping/64/trash_can-512.png' \n          alt='Trash Icon'\n          onClick={() => toggleDeleteModal(id)}  \n        />\n        <S.JobInfo>\n          <S.TaskName>{taskName}</S.TaskName>\n          <span>{additionalInfo}</span>\n        </S.JobInfo>\n        <S.TimeAdded>added {timeDiff}</S.TimeAdded>\n      </S.JobCard>\n    </>\n  );\n}\n\nconst mapState = createStructuredSelector({\n  visibleDeleteModal: selectVisibleDeleteModal\n});\n\nconst mapDispatch = dispatch => ({\n  toggleDeleteModal: id => dispatch(toggleDeleteModal(id))\n});\n\nexport default connect(mapState, mapDispatch)(JobCard);","export const getTimeDiff = taskTime => {\n  const diffMinutes = Math.round((new Date().getTime() - taskTime) / 60000);\n  if (diffMinutes === 0) {\n    return `just now`;\n  } else if (diffMinutes === 1) {\n    return '1 minute ago';\n  } else if (diffMinutes < 60) {\n    return `${diffMinutes} minutes ago`;\n  } else if (diffMinutes < 1410) {\n    return `${Math.round(diffMinutes / 60)} hours ago`;\n  } else if (diffMinutes < 2160) {\n    return `1 day ago`;\n  } else {\n    return `${Math.round(diffMinutes / 1440)} days ago`;\n  }\n};","import React from 'react';\nimport * as S from './jobs.styles';\n\nimport {connect} from 'react-redux';\nimport {createStructuredSelector} from 'reselect';\nimport {selectJobsList} from '../../redux/jobs/jobs-selectors';\n\nimport JobCard from '../job-card/job-card';\n\n\nconst Jobs = ({jobsList}) => {\n  return (\n    <S.Jobs>\n      {jobsList.map((job, i) =>\n        <JobCard \n          taskName={job.taskName} \n          additionalInfo={job.additionalInfo}\n          priority={job.priority}\n          date={job.date}\n          color={job.color}\n          key={i}\n          id={i}\n        />\n      )}\n    </S.Jobs>\n  );\n}\n\nconst mapState = createStructuredSelector({\n  jobsList: selectJobsList\n});\n\nexport default connect(mapState)(Jobs);","import styled from 'styled-components';\n\nexport const Backdrop = styled.div`\n  width: 100vw;\n  height: 100vh;\n  background-color: #0A011C;\n  opacity: 0.7;\n  position: fixed;\n  z-index: 10;\n`;\n\nexport const Popup = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 45px 0;\n  width: 350px;\n  background-color: white;\n  border-radius: 5px;\n  position: fixed;\n  top: 80px;\n  left: 25px;\n  z-index: 11;\n`;\n\nexport const Title = styled.div`\n  font-size: 30px;\n  font-weight: 600;\n  margin: 10px 0 30px;\n`;\n\nexport const XButton = styled.div`\n  font-size: 25px;\n  position: absolute;\n  top: 0;\n  right: 12px;\n  color: #aaaaaa;\n  cursor: pointer;\n`;\n\nexport const Input = styled.input`\n  width: 80%;\n  height: 45px;\n  margin: 5px 0;\n  padding-left: 15px;\n  border-radius: 5px;\n  border: solid 1px #bbbbbb;\n  font-size: 15px;\n`;\n\nexport const SubmitButton = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 80%;\n  height: 45px;\n  background-color: #A734E9;\n  border-radius: 5px;\n  color: white;\n  font-size: 17px;\n  margin-top: 20px;\n  cursor: pointer;\n`;","import React, {useState} from 'react';\nimport * as S from './add-modal.styles';\n\nimport {connect} from 'react-redux';\nimport {toggleAddModal} from '../../redux/modals/modals-actions';\nimport {addJob} from '../../redux/jobs/jobs-actions';\n\n\nconst AddModal = ({toggleAddModal, addJob}) => {\n  const [taskInfo, setTaskInfo] = useState({\n    taskName: '',\n    additionalInfo: '',\n    priority: '',\n    date: null\n  });\n\n  const randomColor = {\n    shuffle: Math.floor(Math.random() * 7 + 1),\n    modifier: Math.floor(Math.random() * 3 + 1) * 25\n  }\n\n  const handleChange = event => {\n    const {name, value} = event.target;\n    setTaskInfo({...taskInfo, [name]: value});\n  };\n\n  const handleSubmit = () => {\n    if (\n      taskInfo.taskName \n      && Math.ceil(taskInfo.priority / 5) === 1 \n      && Number.isInteger(Number(taskInfo.priority))\n    ) {\n      addJob({\n        ...taskInfo, \n        date: new Date().getTime(),\n        color: randomColor\n      });\n      setTaskInfo({\n        taskName: '',\n        additionalInfo: ''\n      });\n      toggleAddModal();\n    }\n  };\n\n  return (\n    <>\n      <S.Backdrop onClick={toggleAddModal} />\n      <S.Popup>\n        <S.Title>Add a task</S.Title>\n        <S.XButton onClick={toggleAddModal}>x</S.XButton>\n        <S.Input \n          name='taskName'\n          placeholder='Task Name'\n          value={taskInfo.taskName} \n          onChange={handleChange}\n        />\n        <S.Input \n          name='additionalInfo'\n          placeholder='Additional Info'\n          value={taskInfo.additionalInfo}\n          onChange={handleChange}\n        />\n        <S.Input\n          name='priority'\n          placeholder='Priority Level (1-5)'\n          value={taskInfo.priority}\n          onChange={handleChange}\n        />\n        <S.SubmitButton onClick={handleSubmit}>\n          Submit\n        </S.SubmitButton>\n      </S.Popup>\n    </>\n  );\n}\n\nconst mapDispatch = dispatch => ({\n  toggleAddModal: () => dispatch(toggleAddModal()),\n  addJob: job => dispatch(addJob(job))\n});\n\nexport default connect(null, mapDispatch)(AddModal);","import React from 'react';\nimport * as S from './App.styles';\n\nimport {connect} from 'react-redux';\nimport {createStructuredSelector} from 'reselect';\nimport {selectAddModalHidden} from './redux/modals/modals-selectors';\n\nimport Header from './components/header/header';\nimport Jobs from './components/jobs/jobs';\nimport AddModal from './components/add-modal/add-modal';\n\n\nconst App = ({addModalHidden}) => {\n  return (\n    <S.App>\n      {!addModalHidden ? <AddModal /> : null}\n      <Header />\n      <Jobs />\n    </S.App>\n  );\n}\n\nconst mapState = createStructuredSelector({\n  addModalHidden: selectAddModalHidden\n});\n\nexport default connect(mapState)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export const addJob = (jobsList, jobToAdd) => {\n  const newJobsList = [...jobsList];\n  if (!jobsList.find(job => \n    job.taskName.toLowerCase() === jobToAdd.taskName.toLowerCase() \n  )) {\n    newJobsList.push(jobToAdd);\n  }\n  newJobsList.sort((a,b) => b.priority - a.priority);\n  return newJobsList;\n}\n\nexport const deleteJob = (jobsList, jobToDelete) => {\n  const newJobsList = jobsList.filter(job => \n    job.taskName.toLowerCase() !== jobToDelete.taskName.toLowerCase() \n  );\n  return newJobsList;\n}","import Types from './jobs-types';\nimport {addJob, deleteJob} from './jobs-utils';\n\n\nconst INITIAL_STATE = {\n  jobsList: []\n};\n\nconst jobsReducer = (state=INITIAL_STATE, action) => {\n  switch (action.type) {\n    case Types.ADD_JOB:\n      return {\n        ...state,\n        jobsList: addJob(state.jobsList, action.payload)\n      };\n    case Types.DELETE_JOB:\n      return {\n        ...state,\n        jobsList: deleteJob(state.jobsList, action.payload)\n      };\n    default: \n      return state;\n  }\n};\n\nexport default jobsReducer;","import Types from './modals-types';\n\nconst INITIAL_STATE = {\n  addModalHidden: true,\n  visibleDeleteModal: null\n};\n\nconst modalsReducer = (state=INITIAL_STATE, action) => {\n  switch (action.type) {\n    case Types.TOGGLE_ADD_MODAL: \n      return {\n        ...state,\n        addModalHidden: !state.addModalHidden\n      };\n    case Types.TOGGLE_DELETE_MODAL:\n      return {\n        ...state,\n        visibleDeleteModal: action.payload\n      };\n    default:\n      return state;\n  }\n};\n\nexport default modalsReducer;","import {combineReducers} from 'redux';\nimport {persistReducer} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\nimport jobsReducer from './jobs/jobs-reducer';\nimport modalsReducer from './modals/modals-reducer';\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n  whitelist: ['jobs']\n}\n\nconst rootReducer = combineReducers({\n  jobs: jobsReducer,\n  modals: modalsReducer\n});\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nexport default persistedReducer;","import {createStore, applyMiddleware} from 'redux';\nimport {persistStore} from 'redux-persist';\nimport logger from 'redux-logger';\nimport persistedReducer from './root-reducer';\n\nconst middlewares = [];\n\nif (process.env.NODE_ENV === 'development') {\n  middlewares.push(logger);\n}\n\nexport const store = createStore(persistedReducer, applyMiddleware(...middlewares));\n\nexport const persistor = persistStore(store);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './fonts/SourceSansPro-Regular.ttf';\nimport {Provider} from 'react-redux';\nimport {store, persistor} from './redux/store';\nimport {PersistGate} from 'redux-persist/integration/react';\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate persistor={persistor}>\n      <App />\n    </PersistGate>\n  </Provider>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}